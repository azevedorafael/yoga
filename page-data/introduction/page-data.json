{"componentChunkName":"component---src-templates-docs-js","path":"/introduction","webpackCompilationHash":"","result":{"data":{"site":{"siteMetadata":{"title":"Gympass Design System","docsLocation":""}},"mdx":{"fields":{"id":"42504928-4f45-5786-8abb-d9220d8b05f3","title":"Getting started","slug":"/introduction/"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Getting started\",\n  \"metaTitle\": \"Components List Page\",\n  \"metaDescription\": \"This is the list of Components\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Project Title\"), mdx(\"p\", null, \"One Paragraph of project description goes here\"), mdx(\"h2\", null, \"Getting Started\"), mdx(\"p\", null, \"These instructions will get you a copy of the project up and running on your local machine for development and testing purposes. See deployment for notes on how to deploy the project on a live system.\"), mdx(\"h3\", null, \"Prerequisites\"), mdx(\"p\", null, \"What things you need to install the software and how to install them\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"Give examples\\n\")), mdx(\"h3\", null, \"Installing\"), mdx(\"p\", null, \"A step by step series of examples that tell you how to get a development env running\"), mdx(\"p\", null, \"Say what the step will be\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"Give the example\\n\")), mdx(\"p\", null, \"And repeat\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"until finished\\n\")), mdx(\"p\", null, \"End with an example of getting some data out of the system or using it for a little demo\"), mdx(\"h2\", null, \"Running the tests\"), mdx(\"p\", null, \"Explain how to run the automated tests for this system\"), mdx(\"h3\", null, \"Break down into end to end tests\"), mdx(\"p\", null, \"Explain what these tests test and why\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"Give an example\\n\")), mdx(\"h3\", null, \"And coding style tests\"), mdx(\"p\", null, \"Explain what these tests test and why\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"Give an example\\n\")), mdx(\"h2\", null, \"Deployment\"), mdx(\"p\", null, \"Add additional notes about how to deploy this on a live system\"), mdx(\"h2\", null, \"Built With\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://www.dropwizard.io/1.0.2/docs/\"\n  }), \"Dropwizard\"), \" - The web framework used\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://maven.apache.org/\"\n  }), \"Maven\"), \" - Dependency Management\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://rometools.github.io/rome/\"\n  }), \"ROME\"), \" - Used to generate RSS Feeds\")), mdx(\"h2\", null, \"Contributing\"), mdx(\"p\", null, \"Please read \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://gist.github.com/PurpleBooth/b24679402957c63ec426\"\n  }), \"CONTRIBUTING.md\"), \" for details on our code of conduct, and the process for submitting pull requests to us.\"), mdx(\"h2\", null, \"Versioning\"), mdx(\"p\", null, \"We use \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://semver.org/\"\n  }), \"SemVer\"), \" for versioning. For the versions available, see the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/your/project/tags\"\n  }), \"tags on this repository\"), \".\"), mdx(\"h2\", null, \"Authors\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Billie Thompson\"), \" - \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Initial work\"), \" - \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/PurpleBooth\"\n  }), \"PurpleBooth\"))), mdx(\"p\", null, \"See also the list of \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/your/project/contributors\"\n  }), \"contributors\"), \" who participated in this project.\"), mdx(\"h2\", null, \"License\"), mdx(\"p\", null, \"This project is licensed under the MIT License - see the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"LICENSE.md\"\n  }), \"LICENSE.md\"), \" file for details\"), mdx(\"h2\", null, \"Acknowledgments\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Hat tip to anyone whose code was used\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Inspiration\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"etc\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#project-title","title":"Project Title","items":[{"url":"#getting-started","title":"Getting Started","items":[{"url":"#prerequisites","title":"Prerequisites"},{"url":"#installing","title":"Installing"}]},{"url":"#running-the-tests","title":"Running the tests","items":[{"url":"#break-down-into-end-to-end-tests","title":"Break down into end to end tests"},{"url":"#and-coding-style-tests","title":"And coding style tests"}]},{"url":"#deployment","title":"Deployment"},{"url":"#built-with","title":"Built With"},{"url":"#contributing","title":"Contributing"},{"url":"#versioning","title":"Versioning"},{"url":"#authors","title":"Authors"},{"url":"#license","title":"License"},{"url":"#acknowledgments","title":"Acknowledgments"}]}]},"parent":{"__typename":"File","relativePath":"introduction/index.mdx"},"frontmatter":{"metaTitle":"Components List Page","metaDescription":"This is the list of Components"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/components/button","title":"Button"}}},{"node":{"fields":{"slug":"/components/","title":"Components"}}},{"node":{"fields":{"slug":"/introduction/","title":"Getting started"}}},{"node":{"fields":{"slug":"/","title":"Gympass Design System"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"42504928-4f45-5786-8abb-d9220d8b05f3"}}}